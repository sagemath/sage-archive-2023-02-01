--- a/share/contrib/integration/abs_integrate.mac
+++ b/share/contrib/integration/abs_integrate.mac
@@ -127,7 +127,7 @@ linear_in_p(e,x) :=
 signum_int(q,x) := block([w : 1, acc : [], sgn, v, f, listconstvars : true],
   q : convert_to_signum(q),
   if freeof('signum, q) then (
-    q : if polynomialp(q,[x]) then integrate(q,x) else false,
+    q : block([extra_integration_methods : []], integrate(trigsimp(q),x)),
     if freeof('integrate, nounify('integrate),q) then q else false)
   else (
     q : almost_everywhere_simp(q), 
--- a/share/contrib/integration/rtest_abs_integrate.mac
+++ b/share/contrib/integration/rtest_abs_integrate.mac
@@ -510,12 +510,19 @@ integrate(sqrt(max(5,x)),x);
 /* abs_integrate causes stack overflow - ID: 3533723 */
 block([extra_integration_methods : ['intfudu, 'intfugudu, 'signum_int, 'abs_integrate_use_if, 'floor_int, 'if_int]],
    integrate(log(sin(x)),x));
-x*log(sin(x))-(x*log(sin(x)^2+cos(x)^2+2*cos(x)+1)
-              +x*log(sin(x)^2+cos(x)^2-2*cos(x)+1)
-              +2*%i*x*atan2(sin(x),cos(x)+1)
-              -2*%i*x*atan2(sin(x),1-cos(x))-2*%i*li[2](%e^(%i*x))
-              -2*%i*li[2](-%e^(%i*x))-%i*x^2)
-              /2$
+(2*%i*li[2](%e^(%i*x))+2*%i*li[2](-%e^(%i*x))-%i*x^2+(%i*%pi-4*log(2)) *x)/2 +log(2)*x$
+
+/* #2526 abs_integrate fails on integrate(sqrt(x + sqrt(x)), x) */
+
+i : integrate(sqrt(x + sqrt(x)), x);
+(16*sqrt(sqrt(x)+1)*x^2+sqrt(sqrt(x)+1)*(4*sqrt(x)-6)*x+(3*log((x^(1/4)+sqrt(sqrt(x)+1))/x^(1/4))
+                               -3*log((sqrt(sqrt(x)+1)-x^(1/4))/x^(1/4))) *x^(3/4))/(24*x^(3/4))$
+
+rootscontract(radcan(diff(i,x)/sqrt(x+sqrt(x))));
+1$
+
+integrate(sqrt(x + sqrt(x)),x,0,1);
+(3*log(sqrt(2)+1)-3*log(sqrt(2)-1)+7*2^(3/2))/24$
 
 /* SF bug #2557: "abs_integrate leaks assumptions into enclosing context" */
 
